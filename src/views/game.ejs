<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ê≠ª‰∫°ÂåªÈô¢ - Ê∏∏Êàè</title>
    <link rel="icon" type="image/png" href="/images/favicon.png">
    <style>
        body {
            font-family: 'Microsoft YaHei', sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #1a1a1a;
            color: #fff;
        }
        .game-container {
            background-color: rgba(0, 0, 0, 0.8);
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 20px rgba(255, 0, 0, 0.2);
        }
        .player-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding: 10px;
            background-color: rgba(0, 0, 0, 0.5);
            border-radius: 5px;
        }
        .player-name {
            font-size: 24px;
            font-weight: bold;
            color: #ff3333;
        }
        .health-display {
            display: flex;
            gap: 15px;
            font-size: 36px;
            color: #ff3333;
        }
        .heart {
            transition: all 0.3s ease;
        }
        .heart.broken {
            color: #666;
            animation: heartBeat 0.5s ease-in-out;
        }
        @keyframes heartBeat {
            0% { transform: scale(1); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }
        .controls {
            display: flex;
            justify-content: center;
            margin-top: 30px;
        }
        .control-button {
            padding: 12px 30px;
            background-color: #ff3333;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 18px;
            transition: all 0.3s ease;
        }
        .control-button:hover {
            background-color: #cc0000;
            transform: scale(1.05);
        }
        .game-content {
            background-color: rgba(0, 0, 0, 0.5);
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
        }
        .location-info {
            margin-bottom: 30px;
        }
        .location-info h2 {
            font-size: 28px;
            color: #ff3333;
            margin-bottom: 15px;
        }
        .location-info p {
            font-size: 18px;
            line-height: 1.6;
        }
        .options {
            display: flex;
            flex-direction: column;
            gap: 20px;
            margin-bottom: 30px;
        }
        .option-button {
            padding: 15px 25px;
            font-size: 18px;
            background-color: #ff3333;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            text-align: left;
        }
        .option-button:hover {
            background-color: #cc0000;
            transform: scale(1.02);
        }
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        .menu-button {
            background-color: #e74c3c;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }
        .menu-button:hover {
            background-color: #c0392b;
        }
        .settings-button {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            padding: 8px;
            transition: transform 0.3s;
        }
        .settings-button:hover {
            transform: rotate(90deg);
        }
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            z-index: 1000;
        }
        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #2c2c2c;
            padding: 20px;
            border-radius: 10px;
            min-width: 300px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
        }
        .settings-item {
            margin: 20px 0;
        }
        .settings-item label {
            display: block;
            margin-bottom: 10px;
            color: #fff;
        }
        .settings-item input[type="range"] {
            width: 100%;
            margin: 10px 0;
        }
        .settings-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }
        .close-button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
        }
        .close-button:hover {
            background-color: #2980b9;
        }
        h2 {
            color: #fff;
            margin-top: 0;
            text-align: center;
        }
        .sound-controls {
            display: flex;
            justify-content: center;
            margin-top: 10px;
        }
        .sound-button {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            padding: 5px;
            transition: transform 0.3s;
        }
        .sound-button:hover {
            transform: scale(1.1);
        }
    </style>
</head>
<body>
    <div class="game-container">
        <!-- Èü≥È¢ëÂÖÉÁ¥† -->
        <audio id="bgMusic" loop preload="auto" autoplay>
            <source src="/audio/backgroud.mp3" type="audio/mpeg">
            <source src="/audio/backgroud.ogg" type="audio/ogg">
            ÊÇ®ÁöÑÊµèËßàÂô®‰∏çÊîØÊåÅÈü≥È¢ëÊí≠Êîæ„ÄÇ
        </audio>

        <div class="header">
            <div class="player-info">
                <% if (gameState.gameStarted) { %>
                    <div class="player-name">Áé©ÂÆ∂Ôºö<%= gameState.playerName %></div>
                    <div class="health-display">
                        <% for(let i = 0; i < 6; i++) { %>
                            <span class="heart <%= i >= gameState.health ? 'broken' : '' %>">‚ô•</span>
                        <% } %>
                    </div>
                <% } %>
            </div>
            <button class="settings-button" onclick="openSettings()">‚öôÔ∏è</button>
        </div>

        <!-- ËÆæÁΩÆÂºπÁ™ó -->
        <div id="settingsModal" class="modal">
            <div class="modal-content">
                <h2>ËÆæÁΩÆ</h2>
                <div class="settings-item">
                    <label for="volume">Èü≥Èáè</label>
                    <input type="range" id="volume" min="0" max="100" value="100">
                    <div class="sound-controls">
                        <button id="toggleSound" class="sound-button">
                            <span id="soundIcon">üîä</span>
                        </button>
                    </div>
                </div>
                <div class="settings-buttons">
                    <form action="/return-to-menu" method="POST" style="display: inline;">
                        <button type="submit" class="menu-button">ËøîÂõû‰∏ªËèúÂçï</button>
                    </form>
                    <button onclick="closeSettings()" class="close-button">ÂÖ≥Èó≠</button>
                </div>
            </div>
        </div>

        <div class="game-content">
            <div class="location-info">
                <h2><%= currentLocation.name %></h2>
                <p><%= currentLocation.description %></p>
            </div>

            <div class="options">
                <% Object.entries(currentLocation.options).forEach(([key, option]) => { %>
                    <form action="/choice" method="POST">
                        <input type="hidden" name="choice" value="<%= key %>">
                        <button type="submit" class="option-button">
                            <%= option.text %>
                        </button>
                    </form>
                <% }); %>
            </div>
        </div>
    </div>

    <script>
        // Èü≥È¢ëÊéßÂà∂
        const bgMusic = document.getElementById('bgMusic');
        const volumeSlider = document.getElementById('volume');
        const toggleSoundBtn = document.getElementById('toggleSound');
        const soundIcon = document.getElementById('soundIcon');
        let isMuted = false;

        // Âº∫Âà∂ËÆæÁΩÆÂæ™ÁéØÊí≠Êîæ
        bgMusic.loop = true;

        // Âú®È°µÈù¢Âä†ËΩΩÂÆåÊàêÂêéÁ´ãÂç≥Êí≠Êîæ
        document.addEventListener('DOMContentLoaded', function() {
            // Â∞ùËØïÁ´ãÂç≥Êí≠Êîæ
            const startPlaying = async () => {
                try {
                    // Âä†ËΩΩ‰øùÂ≠òÁöÑÈü≥ÈáèËÆæÁΩÆ
                    const savedVolume = localStorage.getItem('gameVolume') || 100;
                    volumeSlider.value = savedVolume;
                    bgMusic.volume = savedVolume / 100;
                    
                    await bgMusic.play();
                    console.log('Èü≥‰πêÂºÄÂßãÊí≠Êîæ');
                } catch (err) {
                    console.log('Ëá™Âä®Êí≠ÊîæÂ§±Ë¥•ÔºåÁ≠âÂæÖÁî®Êà∑‰∫§‰∫í');
                    // Ê∑ªÂä†‰∏ÄÊ¨°ÊÄßÁÇπÂáª‰∫ã‰ª∂ÁõëÂê¨Âô®
                    const startAudio = async () => {
                        try {
                            await bgMusic.play();
                            document.removeEventListener('click', startAudio);
                        } catch (error) {
                            console.error('Êí≠ÊîæÂ§±Ë¥•:', error);
                        }
                    };
                    document.addEventListener('click', startAudio);
                }
            };
            startPlaying();
        });

        // Á°Æ‰øùÈü≥È¢ëÁªìÊùüÂêéÈáçÊñ∞Êí≠Êîæ
        bgMusic.addEventListener('ended', function() {
            console.log('Èü≥È¢ëÊí≠ÊîæÁªìÊùüÔºåÈáçÊñ∞ÂºÄÂßã');
            bgMusic.currentTime = 0;
            bgMusic.play();
        });

        // Èü≥ÈáèÊªëÂùóÊéßÂà∂
        volumeSlider.addEventListener('input', function() {
            const volume = this.value / 100;
            bgMusic.volume = volume;
            localStorage.setItem('gameVolume', this.value);
            
            // Êõ¥Êñ∞Èü≥ÈáèÂõæÊ†á
            if (volume === 0) {
                soundIcon.textContent = 'üîá';
            } else if (volume < 0.5) {
                soundIcon.textContent = 'üîâ';
            } else {
                soundIcon.textContent = 'üîä';
            }
        });

        // ÈùôÈü≥ÂàáÊç¢
        toggleSoundBtn.addEventListener('click', function() {
            isMuted = !isMuted;
            bgMusic.muted = isMuted;
            soundIcon.textContent = isMuted ? 'üîá' : 'üîä';
        });

        function openSettings() {
            document.getElementById('settingsModal').style.display = 'block';
        }

        function closeSettings() {
            document.getElementById('settingsModal').style.display = 'none';
        }

        // ÁÇπÂáªÂºπÁ™óÂ§ñÈÉ®ÂÖ≥Èó≠ÂºπÁ™ó
        window.onclick = function(event) {
            const modal = document.getElementById('settingsModal');
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        }
    </script>
</body>
</html> 